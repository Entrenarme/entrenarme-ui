{"version":3,"file":"static/preview.22b3289793539db7fc3e.bundle.js","sources":["webpack:///./src/lib/core/Text/Paragraph/index.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport * as fonts from '../../../helpers/fonts';\nimport colors from '../../../helpers/colors';\n\nconst normalDesktop = 1;\n\nconst normalMobile = 0.875;\n\nconst sizeModifier = 0.25;\n\nconst textSizeTransform = (size, device) => {\n  if (size === 'large') {\n    return device === 'desktop'\n      ? normalDesktop + sizeModifier\n      : normalMobile + sizeModifier;\n  } else if (size === 'small') {\n    return normalDesktop - sizeModifier;\n  } else if (size === 'xs') {\n    return normalMobile - sizeModifier;\n  } else {\n    return device === 'desktop' ? normalDesktop : normalMobile;\n  }\n};\n\nconst marginBottomSize = (size, device) => {\n  if (size === 'large') {\n    return device === 'desktop' ? 1.875 : 1.25;\n  } else if (size === 'small') {\n    return device === 'desktop' ? 0.625 : 0.3125;\n  } else {\n    return device === 'desktop' ? 1.25 : 0.625;\n  }\n};\n\nconst StyledP = styled.p`\n  ${props => (props.options.noMargin ? 'margin: 0 !important;' : '')};\n  font-size: ${props =>\n    `${textSizeTransform(props.options.size, 'desktop')}rem`};\n  font-weight: 400;\n  font-family: ${props =>\n    props.options.font === 'regular' ? fonts.regularFont : fonts.mainFont};\n  text-align: ${props => props.options.textAlign};\n  color: ${props => props.options.color};\n  margin-top: 0rem;\n  margin-left: 0rem;\n  margin-right: 0rem;\n  margin-bottom: ${props =>\n    `${marginBottomSize(props.options.size, 'desktop')}rem`};\n\n  /* Smartphones (portrait) ----------- */\n  @media only screen and (max-width: 320px) {\n    font-size: ${props =>\n      `${textSizeTransform(props.options.size, 'mobile')}rem`};\n    margin-bottom: ${props =>\n      `${marginBottomSize(props.options.size, 'mobile')}rem`};\n  }\n\n  /* iPhone 5/6/6+ ----------- */\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    font-size: ${props =>\n      `${textSizeTransform(props.options.size, 'mobile')}rem`};\n    margin-bottom: ${props =>\n      `${marginBottomSize(props.options.size, 'mobile')}rem`};\n  }\n\n  /* iPads (portrait and landscape) ----------- */\n  @media only screen and (min-width: 768px) and (max-width: 1223px) {\n    /* Styles */\n  }\n\n  /* Desktops and laptops ----------- */\n  @media only screen and (min-width: 1224px) {\n    /* Styles */\n  }\n\n  /* Large screens ----------- */\n  @media only screen and (min-width: 1824px) {\n    /* Styles */\n  }\n\n  /* ----------- Retina Screens ----------- */\n  @media screen and (min-device-width: 1200px) and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi) {\n    /* Styles */\n  }\n`;\n\ntype Props = {\n  children: React.Node,\n  size?: 'xs' | 'small' | 'medium' | 'large',\n  textAlign?: 'left' | 'center' | 'right',\n  noMargin?: boolean,\n  color: string,\n  font: 'regular' | 'main',\n};\n\nconst P = ({\n  children,\n  size,\n  textAlign,\n  noMargin,\n  color,\n  font,\n  ...rest\n}: Props) => (\n  <StyledP {...rest} options={{ size, textAlign, noMargin, color, font }}>\n    {children}\n  </StyledP>\n);\n\nP.defaultProps = {\n  size: 'medium',\n  textAlign: 'left',\n  noMargin: false,\n  color: colors.text,\n  font: 'regular',\n};\n\nexport default P;\n"],"mappings":"AAOA","sourceRoot":""}